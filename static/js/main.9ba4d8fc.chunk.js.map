{"version":3,"sources":["components/CurrencyConverter/CurrencyConverter.module.css","assets/images/save.svg","components/Header/Header.module.css","assets/images/edit.svg","components/CurrencyTable/CurrencyTable.module.css","assets/images/close.svg","assets/images/swap.svg","components/Footer/Footer.module.css","App.module.css","api/api.js","redux/currencyReducer.js","redux/store.js","components/Header/Header.jsx","components/CurrencyTable/TableRow/EditableTd/EditableTd.jsx","components/CurrencyTable/TableRow/TableRow.jsx","components/CurrencyTable/CurrencyTable.jsx","components/CurrencyTable/CurrencyTableContainer.jsx","components/CurrencyConverter/CurrencyInputField/CurrencyInputField.jsx","components/CurrencyConverter/CurrencyConverter.jsx","components/CurrencyConverter/CurrencyConverterContainer.jsx","components/Footer/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","instance","axios","baseURL","currencyAPI","get","ERROR","initialState","currency","currencyNames","base","error","actions","type","requestCurrency","makeError","dispatch","a","response","data","forEach","item","i","id","currencyReducer","state","action","map","el","ccy","concat","Set","base_ccy","value","collumName","buy","sale","reducers","combineReducers","currencyBase","store","createStore","applyMiddleware","thunkMiddleware","window","Header","className","Navbar","styles","navBar","variant","Brand","EditableTd","editCurrency","useState","hover","setHover","editMode","setEditMode","text","setText","enableSaveIcon","onMouseEnter","onMouseLeave","Number","toFixed","src","editIcon","alt","icon","onClick","editInput","autoFocus","onChange","e","currentTarget","saveIcon","disableIcon","closeIcon","TableRow","CurrencyTable","props","TableItems","key","table","Table","bordered","CurrencyTableContainer","this","React","Component","connect","CurrencyInputField","currencyInputField","amount","onChangeAmount","Form","Group","group","Control","as","dropDown","selectedCurrency","onChangeCurrency","index","CurrencyConverter","toAmount","fromAmount","fromCurrency","setFromCurrency","toCurrency","setToCurrency","setAmount","amountInField","setAmountInField","exchangeRate","setExchangeRate","newAmount","useEffect","onRateChange","value2","base2","value3","converter","target","swapIcon","swapCurrencyIcon","Footer","footer","App","wrapper","Container","CurrencyConverterContainer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","body","style","background","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.9ba4d8fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"converter\":\"CurrencyConverter_converter__zEX-8\",\"labels\":\"CurrencyConverter_labels__1G5eM\",\"swapCurrencyIcon\":\"CurrencyConverter_swapCurrencyIcon__sQUwp\",\"currencyInputField\":\"CurrencyConverter_currencyInputField__E1Ao-\",\"dropDown\":\"CurrencyConverter_dropDown__3h2Qo\",\"group\":\"CurrencyConverter_group__3hGEy\"};","module.exports = __webpack_public_path__ + \"static/media/save.53634b8d.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"Header_navBar__1qIN4\"};","module.exports = __webpack_public_path__ + \"static/media/edit.84eea3d0.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"CurrencyTable_table__2jPS2\",\"icon\":\"CurrencyTable_icon__3McFk\",\"editIcon\":\"CurrencyTable_editIcon__30itM\",\"saveIcon\":\"CurrencyTable_saveIcon__DWcmo\",\"disableIcon\":\"CurrencyTable_disableIcon__1CkDP\",\"closeIcon\":\"CurrencyTable_closeIcon__2NhFd\",\"editInput\":\"CurrencyTable_editInput__3yhro\",\"error\":\"CurrencyTable_error__3rpy5\"};","module.exports = __webpack_public_path__ + \"static/media/close.b85858f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/swap.40a76008.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__vJovc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2iWnx\"};","import * as axios from \"axios\"\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://api.privatbank.ua/p24api/',\r\n});\r\n\r\nexport const currencyAPI = {\r\n    getCurrency() {\r\n        return instance.get(`pubinfo?json&exchange&coursid=5`);\r\n    },\r\n}","import {currencyAPI} from \"../api/api\";\r\n\r\nconst SET_CURRENCY = 'TABLE/SET-CURRENCY';\r\nconst SET_CURRENCY_NAMES = 'TABLE/SET-CURRENCY-NAMES';\r\nconst SET_CURRENCY_BASE = 'TABLE/SET-CURRENCY-BASE';\r\nconst EDIT_CURRENCY = 'TABLE/EDIT-CURRENCY';\r\nconst ERROR = 'TABLE/ERROR'\r\n\r\nlet initialState = {\r\n    currency: [],  //for array of currencies from response\r\n    currencyNames: [], //for all currency names (including base)\r\n    base: [], //for base_ccy (without duplicates)\r\n    error: false //response error flag to display error message in component\r\n}\r\n\r\nfunction currencyReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case SET_CURRENCY: {\r\n            return {\r\n                ...state,\r\n                currency: action.currency\r\n            }\r\n        }\r\n\r\n        case SET_CURRENCY_NAMES: {\r\n            return {\r\n                ...state,\r\n                currencyNames: (state.currency.map(el => el.ccy).concat([state.base[0]]))\r\n            }\r\n        }\r\n\r\n        case SET_CURRENCY_BASE: {\r\n            return {\r\n                ...state,\r\n                base: [...new Set(state.currency.map(el => el.base_ccy))]\r\n            }\r\n        }\r\n\r\n        case EDIT_CURRENCY: {\r\n            return {\r\n                ...state,\r\n                currency: state.currency.map(value => {\r\n                    if (value.id === action.id) {\r\n                        if (action.collumName === \"buy\")\r\n                            return {...value, buy: action.value}\r\n                        if (action.collumName === \"sale\")\r\n                            return {...value, sale: action.value}\r\n                    }\r\n                    return value;\r\n                })\r\n            }\r\n        }\r\n\r\n        case ERROR: {\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setCurrency: function (currency) {\r\n        return {\r\n            type: SET_CURRENCY,\r\n            currency\r\n        }\r\n    },\r\n\r\n    setCurrencyNames: function () {\r\n        return {\r\n            type: SET_CURRENCY_NAMES\r\n        }\r\n    },\r\n\r\n    setCurrencyBase: function () {\r\n        return {\r\n            type: SET_CURRENCY_BASE\r\n        }\r\n    },\r\n\r\n    setError: function () {\r\n        return {\r\n            type: ERROR\r\n        }\r\n    }\r\n}\r\n\r\nexport function editCurrency(id, value, collumName) {\r\n    return {\r\n        type: EDIT_CURRENCY,\r\n        id,\r\n        value,\r\n        collumName\r\n    }\r\n}\r\n\r\nexport const requestCurrency = (makeError) => async (dispatch) => {\r\n    try {\r\n        const response = await currencyAPI.getCurrency(makeError);\r\n        response.data.forEach((item, i) => {\r\n            item.id = i + 1;\r\n        });\r\n        dispatch(actions.setCurrency(response.data)); //setting currency arr\r\n        dispatch(actions.setCurrencyBase()); //setting all base_ccy (UAH & USD)\r\n        dispatch(actions.setCurrencyNames()); //setting all currency names\r\n    } catch (error) {\r\n        dispatch(actions.setError()); // setting error flag\r\n    }\r\n\r\n}\r\n\r\nexport default currencyReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport currencyReducer from \"./currencyReducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\n\r\nlet reducers = combineReducers({\r\n    currencyBase: currencyReducer\r\n})\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import {Navbar} from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport styles from \"./Header.module.css\"\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n            <Navbar className={styles.navBar} variant=\"dark\">\r\n                <Navbar.Brand>Text Logo</Navbar.Brand>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React, {useState} from \"react\";\r\nimport editIcon from \"../../../../assets/images/edit.svg\"\r\nimport saveIcon from \"../../../../assets/images/save.svg\"\r\nimport closeIcon from \"../../../../assets/images/close.svg\"\r\nimport styles from \"../../CurrencyTable.module.css\"\r\n\r\nexport default function EditableTd({id, value, collumName, editCurrency}) {\r\n\r\n    let [hover, setHover] = useState(false); //observe for mouse over on cell\r\n    let [editMode, setEditMode] = useState(false);//show input if editMode true\r\n    let [text, setText] = useState(value);//input text\r\n    const enableSaveIcon = text > value * 0.9 && text < value * 1.1;// validate input data\r\n\r\n    const onStatusChange = (e) => {\r\n        setText(e.currentTarget.value);\r\n    }\r\n\r\n    return <td onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)}>\r\n        {!editMode && Number(value).toFixed(1) } {/* show short version of cell value */}\r\n        {hover && !editMode && <img src={editIcon} alt={\"icon\"} /* show editIcon on hover*/\r\n                                    className={styles.icon + \" \" + styles.editIcon}\r\n                                    onClick={() => setEditMode(true)}/>}\r\n\r\n        {editMode && <div>\r\n            <input className={styles.editInput} autoFocus={true} value={text}\r\n                   onChange={onStatusChange}/>\r\n            {enableSaveIcon && /*true if text passes validation*/\r\n            <img src={saveIcon} alt={\"icon\"} className={styles.icon + \" \" + styles.saveIcon}\r\n                 onClick={() => {\r\n                     editCurrency(id, text, collumName);\r\n                     setEditMode(false);\r\n                 }}/>}\r\n            {!enableSaveIcon &&\r\n            <img src={saveIcon} alt={\"icon\"}\r\n                 className={styles.icon + \" \" + styles.saveIcon + \" \" + styles.disableIcon}/>}\r\n            <img src={closeIcon} alt={\"icon\"}\r\n                 className={styles.icon + \" \" + styles.closeIcon} onClick={() => setEditMode(false)}/>\r\n        </div>}\r\n    </td>\r\n}\r\n","import React from \"react\";\r\nimport EditableTd from \"./EditableTd/EditableTd\";\r\n\r\nfunction TableRow({id, ccy, base_ccy, buy, sale, editCurrency}) {\r\n\r\n    return <tr>\r\n        <td>{ccy + \" / \" + base_ccy}</td>\r\n        <EditableTd id={id} value={buy} collumName={\"buy\"} editCurrency={editCurrency}/>\r\n        <EditableTd id={id} value={sale} collumName={\"sale\"} editCurrency={editCurrency}/>\r\n    </tr>\r\n}\r\n\r\nexport default TableRow;","import {Table} from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport TableRow from \"./TableRow/TableRow.jsx\";\r\nimport styles from \"./CurrencyTable.module.css\"\r\n\r\nfunction CurrencyTable(props) {\r\n\r\n    let TableItems = props.currency.map((el) => (<TableRow key={el.id} id={el.id} editCurrency={props.editCurrency}\r\n                                                                  ccy={el.ccy} base_ccy={el.base_ccy}\r\n                                                                  buy={el.buy} sale={el.sale}/>));\r\n\r\n\r\n    return <div className={styles.table}>\r\n        <Table bordered variant=\"dark\">\r\n            <thead>\r\n            <tr>\r\n                <th>Currency/Current Date</th>\r\n                <th>Buy</th>\r\n                <th>Sell</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {TableItems}\r\n            </tbody>\r\n        </Table>\r\n    </div>\r\n\r\n}\r\n\r\nexport default CurrencyTable;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport CurrencyTable from \"./CurrencyTable\";\r\nimport styles from \"./CurrencyTable.module.css\"\r\nimport {editCurrency, requestCurrency} from \"../../redux/currencyReducer\";\r\n\r\n\r\nclass CurrencyTableContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestCurrency();\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.props.error === true) return <div className={styles.error}>\r\n            <h2>Sorry, an error occupied :(</h2>\r\n        </div>\r\n        return <CurrencyTable {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currency: state.currencyBase.currency,\r\n        error: state.currencyBase.error\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {requestCurrency, editCurrency})(CurrencyTableContainer)","import React from 'react';\r\nimport styles from '../CurrencyConverter.module.css';\r\nimport {Form} from \"react-bootstrap\";\r\n\r\nfunction CurrencyInputField(props) {\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"number\" className={styles.currencyInputField}\r\n                   value={props.amount} onChange={props.onChangeAmount}/>\r\n            <Form.Group className={styles.group}>\r\n\r\n                <Form.Control as=\"select\" className={styles.dropDown} value={props.selectedCurrency}\r\n                              onChange={props.onChangeCurrency}>\r\n                    {props.currencyNames.map((el, index) => (\r\n                        <option key={index} value={el}>{el}</option>\r\n                    ))}\r\n                </Form.Control>\r\n            </Form.Group>\r\n        </div>\r\n    )\r\n}\r\n\r\n//<Form.Label className={styles.labels}>Example select</Form.Label>\r\n\r\nexport default CurrencyInputField;","import React, {useEffect, useState} from \"react\";\r\nimport CurrencyInputField from \"./CurrencyInputField/CurrencyInputField\";\r\nimport styles from \"./CurrencyConverter.module.css\"\r\nimport swapIcon from \"../../assets/images/swap.svg\"\r\n\r\nfunction CurrencyConverter(props) {\r\n\r\n    const [fromCurrency, setFromCurrency] = useState(); //1st selector option value\r\n    const [toCurrency, setToCurrency] = useState(); //2nd selector option value\r\n    const [amount, setAmount] = useState(1); //input value\r\n    const [amountInField, setAmountInField] = useState(true);//which field the User is using\r\n    const [exchangeRate, setExchangeRate] = useState(1)//rate of selected currency\r\n    let toAmount, fromAmount;\r\n\r\n    if (amountInField) {\r\n        fromAmount = amount\r\n        const newAmount = amount * exchangeRate;\r\n        newAmount % 1 !== 0 ? toAmount = Number(newAmount.toFixed(6)) : toAmount = newAmount\r\n\r\n    } else {\r\n        toAmount = amount\r\n        const newAmount = amount / exchangeRate;\r\n        newAmount % 1 !== 0 ? fromAmount = Number(newAmount.toFixed(6)) : fromAmount = newAmount\r\n    }\r\n\r\n    useEffect(() => { //Sets default selected options\r\n        setFromCurrency(props.base);\r\n        setToCurrency(props.currencyNames[0]);\r\n    }, [props.currencyNames, props.base])\r\n\r\n    useEffect(() => { //changes current exchangeRate on options change or table values\r\n        onRateChange()\r\n    }, [fromCurrency, toCurrency, props.currency])\r\n\r\n    const onRateChange = () => {\r\n\r\n        if (fromCurrency === props.base && toCurrency !== props.base) {//if just first option is UAH\r\n            props.currency.forEach(value => {\r\n                if (toCurrency === value.ccy) {\r\n                    if (value.base_ccy === props.base) { ////if base_ccy of second option is UAH\r\n                        setExchangeRate(Number(1 / value.buy))\r\n                    } else {\r\n                        props.currency.forEach(value2 => {\r\n                            if (value2.ccy === props.base2) setExchangeRate(1 / (value.buy * value2.buy));\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n        if (toCurrency === props.base && fromCurrency !== props.base) {//if just second option is UAH\r\n            props.currency.forEach(value => {\r\n                if (fromCurrency === value.ccy) {\r\n                    if (value.base_ccy === props.base) { //if base_ccy of first option is UAH\r\n                        setExchangeRate(Number(value.buy))\r\n                    } else {\r\n                        props.currency.forEach(value2 => { ////if base_ccy is USD\r\n                            if (value2.ccy === props.base2) setExchangeRate(value.buy * value2.buy);\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n        props.currency.forEach(value => {\r\n            props.currency.forEach(value2 => {\r\n                if (toCurrency === value.ccy && fromCurrency === value2.ccy) {\r\n                    if (value.base_ccy === props.base && value2.base_ccy === props.base) { //if both base_ccy is UAH\r\n                        setExchangeRate(value2.buy / value.buy);\r\n                    } else {\r\n                        if (value2.base_ccy !== props.base) { //if first option is BTC witch base is USD\r\n                            props.currency.forEach(value3 => {\r\n                                if (value3.ccy === props.base2) //convert (BTC/USD * USD/UAG) / OTHER_CCY/UAH\r\n                                    setExchangeRate((value3.buy * value2.buy) / value.buy);\r\n                            })\r\n                        }\r\n                        if (value.base_ccy !== props.base) { //if second option is BTC witch base is USD\r\n                            props.currency.forEach(value3 => {\r\n                                if (value3.ccy === props.base2)\r\n                                    setExchangeRate(1 / ((value3.buy * value.buy) / value2.buy));\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        })\r\n\r\n        if (fromCurrency === toCurrency) {\r\n            setExchangeRate(1)\r\n        }\r\n    }\r\n\r\n    function handleFromAmountChange(e) {\r\n        setAmount(e.target.value)\r\n        setAmountInField(true)\r\n    }\r\n\r\n    function handleToAmountChange(e) {\r\n        setAmount(e.target.value)\r\n        setAmountInField(false)\r\n    }\r\n\r\n    function onSwapCurrencyClick() {\r\n        setFromCurrency(toCurrency);\r\n        setToCurrency(fromCurrency);\r\n    }\r\n\r\n\r\n    return <div className={styles.converter}>\r\n        <CurrencyInputField currencyNames={props.currencyNames}\r\n                            selectedCurrency={fromCurrency}\r\n                            amount={fromAmount}\r\n                            onChangeAmount={handleFromAmountChange}\r\n                            onChangeCurrency={(e) => {\r\n                                setFromCurrency(e.currentTarget.value);\r\n                            }}/>\r\n\r\n        <img src={swapIcon} className={styles.swapCurrencyIcon} alt={\"swap\"} onClick={onSwapCurrencyClick}/>\r\n\r\n        <CurrencyInputField currencyNames={props.currencyNames}\r\n                            selectedCurrency={toCurrency}\r\n                            amount={toAmount}\r\n                            onChangeAmount={handleToAmountChange}\r\n                            onChangeCurrency={(e) => {\r\n                                setToCurrency(e.currentTarget.value)\r\n                            }}/>\r\n    </div>\r\n}\r\n\r\nexport default CurrencyConverter;","import {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport CurrencyConverter from \"./CurrencyConverter\";\r\nimport {requestCurrency} from \"../../redux/currencyReducer\";\r\n\r\nclass CurrencyTableContainer extends React.Component {\r\n    render() {\r\n        return <CurrencyConverter {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currency: state.currencyBase.currency,\r\n        currencyNames: state.currencyBase.currencyNames,\r\n        base: state.currencyBase.base[0], //main base_ccy (UAH)\r\n        base2: state.currencyBase.base[1] //second base_cct (USD)\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {requestCurrency})(CurrencyTableContainer)","import React from \"react\";\r\nimport styles from \"./Footer.module.css\"\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className={styles.footer}>\r\n            <h2>2020 all rights reserved</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\nimport {Container} from \"react-bootstrap\";\nimport Header from \"./components/Header/Header\";\nimport CurrencyTableContainer from \"./components/CurrencyTable/CurrencyTableContainer\";\nimport CurrencyConverterContainer from \"./components/CurrencyConverter/CurrencyConverterContainer\";\nimport Footer from \"./components/Footer/Footer\";\nimport styles from \"./App.module.css\"\n\nfunction App() {\n\n    return (\n        <div className={styles.wrapper}>\n            <Provider store={store}>\n                <Header/>\n                <Container>\n                    <CurrencyTableContainer/>\n                    <CurrencyConverterContainer/>\n                </Container>\n                <Footer/>\n            </Provider>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\ndocument.body.style.background = '#282c34';\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}